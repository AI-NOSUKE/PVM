name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}
  schedule:
    - cron: "0 18 * * 0"  # 毎週月曜朝（JST）に自動実行

jobs:
  pvm-flow:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Cache HuggingFace models
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface
          key: hf-${{ runner.os }}-ruri-v3-310m
          restore-keys: |
            hf-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ① 初回（候補出し & Plan採用）
      - name: Step 1: 初回候補出し
        run: |
          python PVM.py --input_csv examples/sample_texts.csv --text_col text --show-candidates
      - name: Step 1b: Plan=3 採用
        run: |
          python PVM.py --input_csv examples/sample_texts.csv --text_col text --use-plan 3

      # ② 2回目クラスターロック
      - name: Step 2: 2回目クラスターロック
        run: |
          python PVM.py --input_csv examples/sample_texts.csv --text_col text

      # ③ 2回目柔軟適用（アンロック）
      - name: Step 3: 2回目柔軟適用
        run: |
          python PVM.py --input_csv examples/sample_texts.csv --text_col text --unlock

      # 成果物チェック
      - name: Check outputs exist
        run: |
          test -f PVMresult/run_1回目_02/結果スコア.csv
          test -f PVMresult/run_1回目_02/結果レポート.json
          test -f PVMresult/run_2回目_01/結果スコア.csv
          test -f PVMresult/run_2回目_02/結果スコア.csv

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pvm-ci-outputs
          path: PVMresult/**
